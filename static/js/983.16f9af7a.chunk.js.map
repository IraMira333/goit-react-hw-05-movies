{"version":3,"file":"static/js/983.16f9af7a.chunk.js","mappings":"mQAKaA,EAAM,mCAAG,WAAOC,EAAUC,GAAjB,yFACGC,EAAAA,EAAAA,IAAA,UAJb,gCAIa,OACZF,EADY,oBAHT,oCAGS,OAEnBC,EAAS,iBAAaA,GAAc,GAFjB,oBADH,uBACZE,EADY,EACZA,KADY,kBAObA,GAPa,2CAAH,wDASNC,EAAW,mCAAG,8FAAkBL,EAAO,uBAAzB,mFAAH,qDAEXM,EAAe,mCAAG,WAAMC,GAAN,iFACvBP,EAAO,gBAAiBO,GADD,mFAAH,qD,wDCQ5B,IArBmB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GACV,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,UACE,uBAAIG,EAAMK,WAFLL,EAAME,GAMlB,KAGN,C,qBClBD,IAAMI,EAAc,CAClBC,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,WAGT,K,wJC2BA,UA/BiB,WACf,OAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAsBF,EAAAA,EAAAA,UAAS,MAA/B,eAAOG,EAAP,KAAYC,EAAZ,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,gHAEwB5B,EAAAA,EAAAA,MAFxB,OAEUO,EAFV,OAGUsB,EAAkBtB,EAAMuB,QAAQxB,KAAI,YACxC,MAAO,CAAEM,MADkD,EAAhBA,MAC3BH,GAD2C,EAATA,GAEnD,IAEDgB,GAAkB,OAAII,IAP1B,gDASIE,QAAQC,IAAIN,GACZC,EAAO,KAAMM,SACbC,EAAAA,GAAAA,MAAY,KAAMD,QAASpB,EAAAA,GAX/B,0DADc,uBAAC,WAAD,wBAedsB,EACD,GAAE,CAACT,KAGF,iCACE,wBAAI,oBAEJ,SAAC,IAAD,CAAYvB,OAAQqB,MAGzB,C","sources":["API/Api.jsx","components/MoviesList/MoviesList.jsx","components/toastConfig.jsx","pages/HomePage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'ba8df02c5548f4248e5d9d0723885591';\n\nexport const getApi = async (endPoint, dataQuery) => {\n  const { data } = await axios.get(\n    `${URL}${endPoint}?api_key=${API_KEY}${\n      dataQuery ? `&query=${dataQuery}` : ''\n    }&language=en-US`\n  );\n  // console.log(data);\n  return data;\n};\nexport const getTrending = async () => await getApi('/trending/movie/day');\n\nexport const getMoviesByName = async name =>\n  await getApi('/search/movie', name);\n// export default getApi;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(movie => {\n        return (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              <p>{movie.title}</p>\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n\nexport default MoviesList;\n","const toastConfig = {\n  position: 'top-center',\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: 'colored',\n};\n\nexport default toastConfig;\n","import { getTrending } from 'API/Api';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport toastConfig from 'components/toastConfig';\nimport { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst HomePage = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [err, setErr] = useState(null);\n\n  useEffect(() => {\n    async function getTrendingMovie() {\n      try {\n        const movie = await getTrending();\n        const moviesTitleList = movie.results.map(({ title, id }) => {\n          return { title, id };\n        });\n\n        setTrendingMovies([...moviesTitleList]);\n      } catch (error) {\n        console.log(err);\n        setErr(error.message);\n        toast.error(error.message, toastConfig);\n      }\n    }\n    getTrendingMovie();\n  }, [err]);\n\n  return (\n    <>\n      <h1>Trending Today</h1>\n\n      <MoviesList movies={trendingMovies} />\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["getApi","endPoint","dataQuery","axios","data","getTrending","getMoviesByName","name","movies","location","useLocation","map","movie","to","id","state","from","title","toastConfig","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","useState","trendingMovies","setTrendingMovies","err","setErr","useEffect","moviesTitleList","results","console","log","message","toast","getTrendingMovie"],"sourceRoot":""}