{"version":3,"file":"static/js/398.74b43a55.chunk.js","mappings":"kLAKaA,EAAM,mCAAG,WAAOC,EAAUC,GAAjB,yFACGC,EAAAA,EAAAA,IAAA,UAJb,gCAIa,OACZF,EADY,oBAHT,oCAGS,OAEnBC,EAAS,iBAAaA,GAAc,GAFjB,oBADH,uBACZE,EADY,EACZA,KADY,kBAObA,GAPa,2CAAH,wDAUnB,K,wDCSA,IArBmB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GACV,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,UACE,uBAAIG,EAAMK,WAFLL,EAAME,GAMlB,KAGN,C,qBClBD,IAAMI,EAAc,CAClBC,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,WAGT,K,0KCVA,EAA6B,gCAA7B,EAA6E,mCAA7E,EAAqI,wC,SCwBrI,EAtBoB,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,YACnC,OACE,kBAAMC,UAAWC,EAAgBC,SAAUJ,EAA3C,WACE,kBACEE,UAAWC,EACXE,KAAK,OACLC,KAAK,YACLC,aAAa,MACbC,WAAS,EACTC,SAAU,SAAAC,GAAC,OAAIT,EAAYS,EAAEC,OAAOC,MAAzB,KAEb,mBAAQP,KAAK,SAASH,UAAWC,EAAjC,SAAoD,aAKzD,E,UC4CD,EAtDkB,WAAO,IAAD,EACtB,GAA4BU,EAAAA,EAAAA,UAAS,IAArC,eAAOjC,EAAP,KAAekC,EAAf,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAEjDC,EAAAA,EAAAA,YAAU,WAAM,wCAGd,gHAE+B7C,EAAAA,EAAAA,GAAO,gBAAiB2C,GAFvD,UAIwC,KAF9BG,EAFV,QAIqBC,QAAQC,OAJ7B,uBAKMC,EAAAA,GAAAA,QAAA,kBAAiClC,EAAAA,GALvC,0BAQUmC,EAAkBJ,EAAaC,QAAQvC,KAAI,YAC/C,MAAO,CAAEM,MADyD,EAAhBA,MAClCH,GADkD,EAATA,GAE1D,IAED4B,EAAUW,GAZd,kDAcID,EAAAA,GAAAA,MAAY,KAAME,QAASpC,EAAAA,GAd/B,2DAHc,sBACT4B,GADS,mCAoBdS,EACD,GAAE,CAACT,EAAaF,EAAaY,OAkB9B,OACE,iCACE,SAAC,EAAD,CAAa5B,aAlBI,SAAAU,GACnBA,EAAEmB,iBACF,IAAMC,EAAYpB,EAAEC,OAAOmB,UAAUlB,MAAMmB,OAAOC,cAC9CF,EACFb,EAAgB,CAAEgB,MAAOH,KAEzBb,EAAgB,CAAC,GACjBO,EAAAA,GAAAA,KAAW,0BAA2BlC,EAAAA,GAEzC,EAS4CW,YARzB,SAAAiC,GACC,KAAfA,IACFjB,EAAgB,CAAC,GACjBH,EAAU,IAEb,IAKIlC,EAAO2C,OAAS,IAAK,SAACY,EAAA,EAAD,CAAYvD,OAAQA,MAG/C,C","sources":["API/Api.jsx","components/MoviesList/MoviesList.jsx","components/toastConfig.jsx","webpack://react-homework-template/./src/components/MovieSearch/MovieSearch.module.css?a4c9","components/MovieSearch/MovieSearch.jsx","pages/MoviePage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'ba8df02c5548f4248e5d9d0723885591';\n\nexport const getApi = async (endPoint, dataQuery) => {\n  const { data } = await axios.get(\n    `${URL}${endPoint}?api_key=${API_KEY}${\n      dataQuery ? `&query=${dataQuery}` : ''\n    }&language=en-US`\n  );\n  // console.log(data);\n  return data;\n};\n\nexport default getApi;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(movie => {\n        return (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              <p>{movie.title}</p>\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n\nexport default MoviesList;\n","const toastConfig = {\n  position: 'top-center',\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: 'colored',\n};\n\nexport default toastConfig;\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"MovieSearch_searchForm__8c7z6\",\"searchFormBtn\":\"MovieSearch_searchFormBtn__BrevM\",\"searchFormBtnInput\":\"MovieSearch_searchFormBtnInput__iLPSt\"};","import PropTypes from 'prop-types';\nimport css from './MovieSearch.module.css';\n\nconst MovieSearch = ({ handleSubmit, changeInput }) => {\n  return (\n    <form className={css.searchForm} onSubmit={handleSubmit}>\n      <input\n        className={css.searchFormBtnInput}\n        type=\"text\"\n        name=\"searching\"\n        autoComplete=\"off\"\n        autoFocus\n        onChange={e => changeInput(e.target.value)}\n      />\n      <button type=\"submit\" className={css.searchFormBtn}>\n        Search\n      </button>\n    </form>\n  );\n};\n\nMovieSearch.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n};\n\nexport default MovieSearch;\n","import { useState, useEffect } from 'react';\nimport getApi from 'API/Api';\nimport toastConfig from 'components/toastConfig';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport MovieSearch from 'components/MovieSearch/MovieSearch';\nimport { useSearchParams } from 'react-router-dom';\n\nconst MoviePage = () => {\n  const [movies, setMovies] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const querySearch = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!querySearch) return;\n\n    async function getMovie() {\n      try {\n        const moviesSearch = await getApi('/search/movie', querySearch);\n\n        if (moviesSearch.results.length === 0) {\n          toast.warning(`No movies found`, toastConfig);\n          return;\n        }\n        const moviesTitleList = moviesSearch.results.map(({ title, id }) => {\n          return { title, id };\n        });\n\n        setMovies(moviesTitleList);\n      } catch (error) {\n        toast.error(error.message, toastConfig);\n      }\n    }\n    getMovie();\n  }, [querySearch, searchParams.size]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const searching = e.target.searching.value.trim().toLowerCase();\n    if (searching) {\n      setSearchParams({ query: searching });\n    } else {\n      setSearchParams({});\n      toast.warn('Please enter a request!', toastConfig);\n    }\n  };\n  const changeInput = inputQuery => {\n    if (inputQuery === '') {\n      setSearchParams({});\n      setMovies([]);\n    }\n  };\n  return (\n    <>\n      <MovieSearch handleSubmit={handleSubmit} changeInput={changeInput} />\n\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default MoviePage;\n"],"names":["getApi","endPoint","dataQuery","axios","data","movies","location","useLocation","map","movie","to","id","state","from","title","toastConfig","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","handleSubmit","changeInput","className","css","onSubmit","type","name","autoComplete","autoFocus","onChange","e","target","value","useState","setMovies","useSearchParams","searchParams","setSearchParams","querySearch","get","useEffect","moviesSearch","results","length","toast","moviesTitleList","message","getMovie","size","preventDefault","searching","trim","toLowerCase","query","inputQuery","MoviesList"],"sourceRoot":""}