{"version":3,"file":"static/js/186.3963be3a.chunk.js","mappings":"mQAKaA,EAAM,mCAAG,WAAOC,EAAUC,GAAjB,yFACGC,EAAAA,EAAAA,IAAA,UAJb,gCAIa,OACZF,EADY,oBAHT,oCAGS,OAEnBC,EAAS,iBAAaA,GAAc,GAFjB,oBADH,uBACZE,EADY,EACZA,KADY,kBAObA,GAPa,2CAAH,wDASNC,EAAW,mCAAG,8FAAkBL,EAAO,uBAAzB,mFAAH,qDAEXM,EAAe,mCAAG,WAAMC,GAAN,iFACvBP,EAAO,gBAAiBO,GADD,mFAAH,qD,mIC6B5B,UAvCgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAsBF,EAAAA,EAAAA,UAAS,MAA/B,eAAOG,EAAP,KAAYC,EAAZ,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE+Bf,EAAAA,EAAAA,IAAO,UAAD,OAAWa,EAAX,aAFrC,UAEUG,EAFV,wDAMIN,EAAWM,EAAaC,SAN5B,gDAQIC,QAAQC,IAAIR,GACZC,EAAO,KAAMQ,SAEbC,EAAAA,GAAAA,MAAY,KAAMD,QAASE,EAAAA,GAX/B,0DADc,uBAAC,WAAD,wBAedC,EACD,GAAE,CAACZ,EAAKE,KAGP,gCACsB,IAAnBJ,EAAQe,SAAgB,uBAAG,+CAC5B,+BACGf,QADH,IACGA,OADH,EACGA,EAASgB,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3B,OACE,2BACE,yBAAG,WAASD,MACZ,uBAAIC,MAFGF,EAKZ,QAIR,C,qBC5CD,IAAMJ,EAAc,CAClBO,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,WAGT,K","sources":["API/Api.jsx","components/Reviews/Reviews.jsx","components/toastConfig.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'ba8df02c5548f4248e5d9d0723885591';\n\nexport const getApi = async (endPoint, dataQuery) => {\n  const { data } = await axios.get(\n    `${URL}${endPoint}?api_key=${API_KEY}${\n      dataQuery ? `&query=${dataQuery}` : ''\n    }&language=en-US`\n  );\n  // console.log(data);\n  return data;\n};\nexport const getTrending = async () => await getApi('/trending/movie/day');\n\nexport const getMoviesByName = async name =>\n  await getApi('/search/movie', name);\n// export default getApi;\n","import { getApi } from 'API/Api';\nimport toastConfig from 'components/toastConfig';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [err, setErr] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getMovieReviews() {\n      try {\n        const movieReviews = await getApi(`/movie/${movieId}/reviews`);\n        if (!movieReviews) {\n          return;\n        }\n        setReviews(movieReviews.results);\n      } catch (error) {\n        console.log(err);\n        setErr(error.message);\n\n        toast.error(error.message, toastConfig);\n      }\n    }\n    getMovieReviews();\n  }, [err, movieId]);\n\n  return (\n    <>\n      {reviews.length === 0 && <p>We don't have any reviews for this movie.</p>}\n      <ul>\n        {reviews?.map(({ id, author, content }) => {\n          return (\n            <li key={id}>\n              <p>Author: {author}</p>\n              <p>{content}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\nexport default Reviews;\n","const toastConfig = {\n  position: 'top-center',\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: 'colored',\n};\n\nexport default toastConfig;\n"],"names":["getApi","endPoint","dataQuery","axios","data","getTrending","getMoviesByName","name","useState","reviews","setReviews","err","setErr","movieId","useParams","useEffect","movieReviews","results","console","log","message","toast","toastConfig","getMovieReviews","length","map","id","author","content","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme"],"sourceRoot":""}