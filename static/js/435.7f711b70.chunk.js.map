{"version":3,"file":"static/js/435.7f711b70.chunk.js","mappings":"mQAKaA,EAAM,mCAAG,WAAOC,EAAUC,GAAjB,yFACGC,EAAAA,EAAAA,IAAA,UAJb,gCAIa,OACZF,EADY,oBAHT,oCAGS,OAEnBC,EAAS,iBAAaA,GAAc,GAFjB,oBADH,uBACZE,EADY,EACZA,KADY,kBAObA,GAPa,2CAAH,wDASNC,EAAW,mCAAG,8FAAkBL,EAAO,uBAAzB,mFAAH,qDAEXM,EAAe,mCAAG,WAAMC,GAAN,iFACvBP,EAAO,gBAAiBO,GADD,mFAAH,qD,8OCmC5B,EA5Ca,WACX,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAsBF,EAAAA,EAAAA,UAAS,MAA/B,eAAOG,EAAP,KAAYC,EAAZ,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAqBR,OAnBAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE4Bf,EAAAA,EAAAA,IAAO,UAAD,OAAWa,EAAX,aAFlC,UAEUG,EAFV,8BAIMC,EAAAA,GAAAA,QAAA,wCAAuDC,EAAAA,GAJ7D,0BAOIR,EAAQM,EAAUP,MAPtB,kDASIU,QAAQC,IAAIT,GACZC,EAAO,KAAMS,SAEbJ,EAAAA,GAAAA,MAAY,KAAMI,QAASH,EAAAA,GAZ/B,2DADc,uBAAC,WAAD,wBAgBdI,EACD,GAAE,CAACX,EAAKE,KAGP,iCACIJ,IAAQ,uBAAG,2CACb,+BACGA,QADH,IACGA,OADH,EACGA,EAAMc,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,GAAIlB,EAAsB,EAAtBA,KAAMmB,EAAgB,EAAhBA,UAC9BC,EAAOH,EAAY,yCACaA,GAClCI,EACJ,OACE,2BACE,gBAAKC,IAAKF,EAAMG,IAAKvB,EAAMwB,MAAO,OAClC,uBAAIxB,KACJ,yBAAG,cAAYmB,OAHRD,EAMZ,QAIR,C,qBClDD,IAAMP,EAAc,CAClBc,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,WAGT,K","sources":["API/Api.jsx","components/Cast/Cast.jsx","components/toastConfig.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'ba8df02c5548f4248e5d9d0723885591';\n\nexport const getApi = async (endPoint, dataQuery) => {\n  const { data } = await axios.get(\n    `${URL}${endPoint}?api_key=${API_KEY}${\n      dataQuery ? `&query=${dataQuery}` : ''\n    }&language=en-US`\n  );\n  // console.log(data);\n  return data;\n};\nexport const getTrending = async () => await getApi('/trending/movie/day');\n\nexport const getMoviesByName = async name =>\n  await getApi('/search/movie', name);\n// export default getApi;\n","import { getApi } from 'API/Api';\nimport toastConfig from 'components/toastConfig';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport avatar from '../images/icon-user-640x640-min.png';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [err, setErr] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getMovieCast() {\n      try {\n        const movieCast = await getApi(`/movie/${movieId}/credits`);\n        if (!movieCast) {\n          toast.warning(`We haven't found any cast information`, toastConfig);\n          return;\n        }\n        setCast(movieCast.cast);\n      } catch (error) {\n        console.log(err);\n        setErr(error.message);\n\n        toast.error(error.message, toastConfig);\n      }\n    }\n    getMovieCast();\n  }, [err, movieId]);\n\n  return (\n    <>\n      {!cast && <p>We haven't found any cast information</p>}\n      <ul>\n        {cast?.map(({ profile_path, id, name, character }) => {\n          const foto = profile_path\n            ? `https://image.tmdb.org/t/p/w400${profile_path}`\n            : avatar;\n          return (\n            <li key={id}>\n              <img src={foto} alt={name} width={120} />\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\nexport default Cast;\n","const toastConfig = {\n  position: 'top-center',\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: 'colored',\n};\n\nexport default toastConfig;\n"],"names":["getApi","endPoint","dataQuery","axios","data","getTrending","getMoviesByName","name","useState","cast","setCast","err","setErr","movieId","useParams","useEffect","movieCast","toast","toastConfig","console","log","message","getMovieCast","map","profile_path","id","character","foto","avatar","src","alt","width","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme"],"sourceRoot":""}